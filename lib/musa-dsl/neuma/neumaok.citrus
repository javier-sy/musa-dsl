grammar Neuma
	rule line
		(neuma* comment?) { capture(:neuma).value }
	end

	rule neuma
		(element:(dotted_attributes | parenthesis_attributes | command) space) { [ capture[:element].value ]}
	end

	rule dotted_attributes
		(element:(attribute '.' dotted_attributes | attribute)) { [ capture(:element).value ] }
	end

	rule parenthesis_attributes
		('(' spaced_attributes ')') { capture(:spaced_attributes).value }
	end

	rule command
		(element:(event | braced_command)) { [ capture(:element).value ] }
	end

	rule event
		(':' name) { capture(:name).value }
	end

	rule braced_command
		('{' space complex_command space '}') { capture(:complex_command).value }
	end

	rule complex_command
		(element:(everything_except_braces | '{' everything_except_braces '}')) { [ capture(:element).value ] }
	end

	rule everything_except_braces
		( /[^({|})]+/ ) { to_str }
	end

	rule spaced_attributes
		(element:(attribute space spaced_attributes | attribute)) { [ capture(:element).value ] }
	end

	rule attribute
		(everything_except_braces_dots_spaces) { capture(:everything_except_braces_dots_spaces).value }
	end

	rule everything_except_braces_dots_spaces
		( /[^({|}|.| |\t|\n)]+/ ) { to_str }
	end

	rule name
		( /[[:alpha:]]\w*/ ) { to_str }
	end

	rule space
		[ \t\n]*
	end

	rule comment
		'#' .*
	end
end