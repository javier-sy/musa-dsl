grammar Neuma
	rule line
		((neuma space*)* comment?) { captures(:neuma).collect { |c| c.value } }
	end

	rule neuma
		dotted_attributes | parenthesis_attributes
	end

	rule dotted_attributes
		(a:attribute (dot b:attribute)*) { [ capture(:a).value ] + captures(:b).collect { |c| c.value } }
	end

	rule parenthesis_attributes
		(lpar a:attribute (space* b:attribute)* rpar) { [ capture(:a).value ] + captures(:b).collect { |c| c.value } }
	end

	rule command
		event | braced_command
	end

	rule event
		(colon name) { capture(:name).value }
	end

	rule braced_command
		lbrace space* complex_command space* rbrace
	end

	rule complex_command
		everything_except_braces | (lbrace everything_except_braces rbrace)
	end

	rule everything_except_braces
		/[^({|})]+/
	end

	rule attribute
		everything_except_braces_dots_spaces_comment
	end

	rule everything_except_braces_dots_spaces_comment
		/[^({|}|.| |\t|\n|#)]+/
	end

	rule name
		/[[:alpha:]]\w*/
	end

	rule comment
		(hsh everything) { capture(:everything).value }
	end

	rule dot
		'.'
	end

	rule colon
		':'
	end

	rule lpar
		'('
	end

	rule rpar
		')'
	end

	rule lbrace
		'{'
	end

	rule rbrace
		'}'
	end

	rule space
		[ \t\n]
	end

	rule hsh
		'#'
	end

	rule everything
		/.*/
	end
end