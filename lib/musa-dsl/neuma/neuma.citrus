grammar Neuma
	
	rule content
		(spaces (neuma spaces)*) { captures(:neuma).collect { |c| c.value } }
	end

	rule neuma
		command | dotted_attributes | parenthesis_attributes
	end

	rule dotted_attributes
		(dot | (a:attribute (dot b:attribute?)*)) { { attributes: (capture(:a) ? [ capture(:a).value ] : []) + captures(:b).collect { |c| c.value } } }
	end

	rule parenthesis_attributes
		(lpar spaces (a:attribute spaces)* rpar) { { attributes: captures(:a).collect { |c| c.value } } }
	end

	rule attribute
		everything_except_braces_dots_spaces_comment
	end

	rule command
		event | braced_command
	end

	rule event
		(colon name) { { event: capture(:name).value } } 
	end

	rule braced_command
		(lbrace spaces complex_command spaces rbrace) { { command: capture(:complex_command).value } }
	end

	rule complex_command
		everything_except_braces_eol? (spaces lbrace spaces complex_command spaces rbrace)* spaces everything_except_braces_eol?
	end

	rule spaces
		space* comment? space*
	end

	rule comment
		hsh ~eol # everything_except_eol eol?
	end

	rule everything_except_eol
		/[^(\n|\r)]+/
	end

	rule everything_except_braces_eol
		/[^({|}|\n|\r)]+/
	end

	rule everything_except_braces_dots_spaces_comment
		/[^({|}|.| |\t|\n|\r|#)]+/
	end

	rule name
		/[[:alpha:]]\w*/
	end

	rule dot
		'.'
	end

	rule colon
		':'
	end

	rule lpar
		'('
	end

	rule rpar
		')'
	end

	rule lbrace
		'{'
	end

	rule rbrace
		'}'
	end

	rule space
		[ \t\n\r]
	end

	rule hsh
		'#'
	end

	rule eol
		[\n\r]
	end
end