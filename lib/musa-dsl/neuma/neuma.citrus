# TODO add event parameters
	
grammar Neuma

	rule lines
		((spaces ((line_content comment?) | comment | crlf ))*) { captures(:line_content).collect { |c| c.value }.flatten(1) }
	end

	rule line_content
		((neuma spaces)+) { captures(:neuma).collect { |c| c.value } }
	end

	rule neuma
		command | dotted_attributes | parenthesis_attributes
	end

	rule dotted_attributes
		 # buena... (dot | (a:attribute (dot b:attribute?)*)) { { attributes: (capture(:a) ? [ capture(:a).value ] : []) + captures(:b).collect { |c| c.value } } }


		(a1:attribute dot d:dotted_attributes | a2:attribute | dot ) {
			v = []
			
			v << capture(:a1).value if capture(:a1)
			v.concat capture(:d).value[:attributes] if capture(:d)
			#v << capture(:a2).value if capture(:a2)

			{ attributes: v }			
		}

		#( (a:attribute (dot as:attribute)+) | (dot bs:attribute)+ | (c:attribute dot?)+ | dot ) { 
		#	if capture(:a)
		#		{ attributes: [ capture(:a).value ] + captures(:as).collect { |c| c.value } }
		#	elsif captures(:bs)
		#		{ attributes: captures(:bs).collect { |c| c.value } }
		#	elsif capture(:c)
		#		{ attributes: [ capture(:c).value ] }
		#	else
		#		{ }
		#	end	
		#}

#		( (a:attribute (dot as:attribute)+) | (b:attribute dot) | (dot cs:attribute)+ | (d:attribute) | dot )
	end

	rule parenthesis_attributes
		(lpar spaces (a:attribute spaces)* rpar) { { attributes: captures(:a).collect { |c| c.value } } }
	end

	rule attribute
		everything_except_braces_dots_spaces_comment
	end

	rule command
		event | braced_command
	end

	rule event
		(colon name) { { event: capture(:name).value } } 
	end

	rule braced_command
		(lbrace spaces complex_command spaces rbrace) { { command: capture(:complex_command).value } }
	end

	rule complex_command
		everything_except_braces? (spaces lbrace spaces complex_command spaces rbrace)* spaces everything_except_braces?
	end

	rule spaces
		space*
	end

	rule comment
		hsh ~/$/x
	end

	rule space
		[ \t]
	end

	rule everything_except_braces
		/[^({|})]+/
	end

	rule everything_except_braces_dots_spaces_comment
		/[^({|}|.| |\t|\n|\r\#)]+/
	end

	rule name
		/[[:alpha:]]\w*/
	end

	rule dot
		'.'
	end

	rule colon
		':'
	end

	rule lpar
		'('
	end

	rule rpar
		')'
	end

	rule lbrace
		'{'
	end

	rule rbrace
		'}'
	end

	rule hsh
		'#'
	end

	rule crlf
		[\n\r]
	end
end